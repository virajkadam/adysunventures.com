const e="adysun-cache-v1",t="runtime-cache",s="static-cache",n="images-cache",a=["/","/index.html","/static/css/main.css","/static/js/main.js"],c=["/manifest.json","/favicon.ico","/static/css/default.css","/static/css/nav-menu.css","/static/css/styles.css"],i={static:2592e3,images:7776e3,html:3600};async function r(e){try{const s=await fetch(e);return(await caches.open(t)).put(e,s.clone()),s}catch(t){return await caches.match(e)||Response.error()}}async function o(e,t){const s=await caches.open(t),n=await s.match(e);if(n)return n;const a=await fetch(e);return s.put(e,a.clone()),a}async function h(e){const s=await caches.open(t),n=await s.match(e),a=fetch(e).then((t=>(s.put(e,t.clone()),t)));return n||a}self.addEventListener("install",(t=>{t.waitUntil(Promise.all([caches.open(s).then((e=>e.addAll(c))),caches.open(e).then((e=>e.addAll(a)))]).then((()=>self.skipWaiting())))})),self.addEventListener("activate",(a=>{const c=[e,t,s,n];a.waitUntil(caches.keys().then((e=>e.filter((e=>!c.includes(e))))).then((e=>Promise.all(e.map((e=>caches.delete(e)))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(e=>{const t=new URL(e.request.url);"GET"===e.request.method&&t.origin.includes(self.location.origin)&&(t.pathname.startsWith("/api/")?e.respondWith(r(e.request)):"image"!==e.request.destination?"navigate"!==e.request.mode&&"document"!==e.request.destination?"style"!==e.request.destination&&"script"!==e.request.destination&&"font"!==e.request.destination?e.respondWith(h(e.request)):e.respondWith(o(e.request,s)):e.respondWith(r(e.request)):e.respondWith(o(e.request,n)))}));